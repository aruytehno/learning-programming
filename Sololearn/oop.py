'''
Классы
Центральное место в Объектно-Ориентированном Программировании (ООП) занимают объекты, которые создаются с
помощью классов.
Класс описывает, каким будет объект, но является отдельным от самого объекта. Другими словами, класс может быть описан
как шаблон объекта, описание или определение.
Вы можете использовать один класс в качестве шаблона для создания множества различных объектов.

Классы создаются с помощью ключевого слова class и блока с отступом, который содержит методы класса
(которые являются функциями).
Ниже представлен пример простого класса и его объектов.

__init__
Метод __init__ является самым важным методом в классе.
Он вызывается при создании экземпляра (объекта) класса, используя имя класса в качестве функции.

Все методы должны иметь self в качестве первого параметра, хотя он явно не передается, Python добавляет аргумент self в
 список за вас, вам не нужно включать его при вызове методов. Внутри определения метода, self относится к экземпляру,
 вызывающему метод.

Экземпляры класса имеют атрибуты, которые являются фрагментами данных, связанными с ними.
В этом примере, экземпляры Cat имеют атрибуты color и legs. К ним можно получить доступ, поставив точку и имя атрибута
после экземпляра.
В методе __init__, self. attribute может использоваться для установки начального значения атрибутов экземпляра.

Методы
У классов могут быть другие методы, определенные, чтобы добавить классам функциональности.
Помните, что все методы должны иметь self в качестве первого параметра.
Доступ к этим методам осуществляется с помощью того же точечного синтаксиса, как и для атрибутов.

Атрибуты класса передаются всем экземплярам класса.

Наследование
Наследование предоставляет способ передачи функциональности между классами. Давайте представим несколько классов, Cat,
Dog, Rabbit и так далее. Хотя они могут чем-то отличаться (только Dog может иметь метод bark), они, скорее всего, будут
 похожи в другом (у всех есть атрибуты color и name).
Это сходство может быть выражено, если все они унаследованы от суперкласса Animal, который содержит общую
функциональность.
Чтобы унаследовать класс из другого класса, поместите имя суперкласса в круглые скобки после имени класса.

Класс, который наследуется из другого класса, называется подклассом.
Класс, из которого осуществляется наследование, называется суперклассом.
Если класс наследуется из другого класса с теми же атрибутами и методами, то он их переопределяет.

Функция super – это полезная функция, связанная с наследованием, которая относится к родительскому классу. Ее можно
использовать для нахождения метода с определенным именем в суперклассе объекта.
'''

